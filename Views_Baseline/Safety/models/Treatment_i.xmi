<?xml version="1.0" encoding="UTF-8"?>
<b:Program xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:b="http://www.clearsy.com/B-extended" xsi:schemaLocation="http://www.clearsy.com/B-extended /jtl.log2b-extended/metamodels/B.ecore">
  <machines name="Train">
    <operations>
      <operations name="is_train_in_par"/>
      <operations name="is_train_stopped"/>
    </operations>
    <sets>
      <exprs>
        <name name="PAR_RESULT"/>
        <elems name="IN_PAR"/>
        <elems name="NOT_IN_PAR"/>
        <elems name="INCONS_POSITION"/>
      </exprs>
      <exprs>
        <name name="SPEED_RESULT"/>
        <elems name="STOPPED"/>
        <elems name="MOVING"/>
        <elems name="INCONS_SPEED"/>
      </exprs>
    </sets>
  </machines>
  <machines name="Doors">
    <sees/>
    <definitions>
      <exprs name="DOOR_SENSOR_CONSISTENT">
        <args name="visible"/>
        <args name="opening"/>
        <args name="closed"/>
        <args name="closing"/>
        <expr xsi:type="b:AndExpr">
          <exprs xsi:type="b:ImplyExpr">
            <left xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.0"/>
              <right xsi:type="b:ConstantExpr" constant="FALSE"/>
            </left>
            <right xsi:type="b:AndExpr">
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@operations/@operations.0/@outputs.0"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.2"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.3"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
            </right>
          </exprs>
          <exprs xsi:type="b:ImplyExpr">
            <left xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@machines.1/@operations/@operations.0/@outputs.0"/>
              <right xsi:type="b:ConstantExpr"/>
            </left>
            <right xsi:type="b:AndExpr">
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.2"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.3"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
            </right>
          </exprs>
          <exprs xsi:type="b:ImplyExpr">
            <left xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.2"/>
              <right xsi:type="b:ConstantExpr"/>
            </left>
            <right xsi:type="b:AndExpr">
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@operations/@operations.0/@outputs.0"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.3"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
            </right>
          </exprs>
          <exprs xsi:type="b:ImplyExpr">
            <left xsi:type="b:EqualExpr">
              <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.3"/>
              <right xsi:type="b:ConstantExpr"/>
            </left>
            <right xsi:type="b:AndExpr">
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.1"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
              <exprs xsi:type="b:EqualExpr">
                <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.2"/>
                <right xsi:type="b:ConstantExpr" constant="FALSE"/>
              </exprs>
            </right>
          </exprs>
        </expr>
      </exprs>
    </definitions>
    <operations>
      <operations name="are_doors_opening">
        <outputs name="opening"/>
        <body xsi:type="b:Begin">
          <expr xsi:type="b:ReturnTuple">
            <value xsi:type="b:AndExpr">
              <exprs xsi:type="b:TypeConstraint">
                <type xsi:type="b:PrimitiveType"/>
              </exprs>
              <exprs xsi:type="b:ImplyExpr">
                <left xsi:type="b:EqualExpr">
                  <left xsi:type="b:Ref" var="//@machines.1/@definitions/@exprs.0/@args.1"/>
                  <right xsi:type="b:ConstantExpr"/>
                </left>
                <right xsi:type="b:AndExpr">
                  <exprs xsi:type="b:DefinitionCall">
                    <args xsi:type="b:Ref" var="//@machines.3/@concreteVariables/@variables.2"/>
                    <args xsi:type="b:Ref" var="//@machines.3/@concreteVariables/@variables.3"/>
                    <args xsi:type="b:Ref" var="//@machines.3/@concreteVariables/@variables.9"/>
                    <args xsi:type="b:Ref" var="//@machines.3/@concreteVariables/@variables.8"/>
                  </exprs>
                  <exprs xsi:type="b:DefinitionCall">
                    <args xsi:type="b:Ref" var="//@machines.3/@concreteVariables/@variables.6"/>
                    <args xsi:type="b:Ref" var="//@machines.3/@concreteVariables/@variables.3"/>
                    <args xsi:type="b:Ref" var="//@machines.3/@concreteVariables/@variables.9"/>
                    <args xsi:type="b:Ref" var="//@machines.3/@concreteVariables/@variables.8"/>
                  </exprs>
                </right>
              </exprs>
            </value>
          </expr>
        </body>
      </operations>
    </operations>
  </machines>
  <machines name="Treatment">
    <operations>
      <operations name="aopp_authorization">
        <outputs name="aopp"/>
        <outputs name="fallback"/>
        <body xsi:type="b:Begin">
          <expr xsi:type="b:ReturnTuple">
            <value xsi:type="b:AndExpr">
              <exprs xsi:type="b:TypeConstraint">
                <type xsi:type="b:PrimitiveType"/>
              </exprs>
              <exprs xsi:type="b:TypeConstraint">
                <type xsi:type="b:Ref" type="//@machines.2/@sets/@exprs.0/@name"/>
              </exprs>
              <exprs xsi:type="b:ImplyExpr">
                <left xsi:type="b:EqualExpr">
                  <left xsi:type="b:Ref"/>
                  <right xsi:type="b:ConstantExpr"/>
                </left>
                <right xsi:type="b:EqualExpr">
                  <left xsi:type="b:Ref" var="//@machines.2/@operations/@operations.0/@outputs.1"/>
                  <right xsi:type="b:Ref" var="//@machines.2/@sets/@exprs.0/@elems.2"/>
                </right>
              </exprs>
            </value>
          </expr>
        </body>
      </operations>
    </operations>
    <sets>
      <exprs>
        <name name="FALLBACKS"/>
        <elems name="INCONSISTENT_POSITION"/>
        <elems name="INCONSISTENT_SPEED"/>
        <elems name="NOMINAL"/>
      </exprs>
    </sets>
  </machines>
  <machines name="Inputs">
    <operations>
      <operations name="get_inputs">
        <body xsi:type="b:Begin">
          <expr xsi:type="b:ReturnOr">
            <exprs>
              <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
            </exprs>
            <exprs>
              <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
            </exprs>
            <exprs>
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs>
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs>
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs>
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs>
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs>
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs>
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs>
              <type xsi:type="b:PrimitiveType"/>
            </exprs>
            <exprs>
              <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
            </exprs>
            <exprs>
              <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
            </exprs>
          </expr>
        </body>
      </operations>
    </operations>
    <concreteVariables>
      <variables name="M21_Position"/>
      <variables name="M21_Speed"/>
      <variables name="M22_DoorsVisible"/>
      <variables name="M22_DoorsOpening"/>
      <variables name="M22_DoorsClosing"/>
      <variables name="M22_DoorsClosed"/>
      <variables name="M23_DoorsVisible"/>
      <variables name="M23_DoorsOpening"/>
      <variables name="M23_DoorsClosing"/>
      <variables name="M23_DoorsClosed"/>
      <variables name="M24_Position"/>
      <variables name="M24_Speed"/>
    </concreteVariables>
    <invariant>
      <exprs>
        <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
      </exprs>
      <exprs>
        <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
      </exprs>
      <exprs>
        <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
      </exprs>
    </invariant>
    <initialisation>
      <exprs>
        <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
      </exprs>
      <exprs>
        <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
      <exprs>
        <type xsi:type="b:Ref" type="//@machines.4/@concreteConstants/@constants.1"/>
      </exprs>
      <exprs>
        <type xsi:type="b:Ref"/>
      </exprs>
    </initialisation>
  </machines>
  <machines name="Utils">
    <concreteConstants>
      <constants name="UINT16_MAX"/>
      <constants name="uint16_t"/>
    </concreteConstants>
    <properties>
      <exprs xsi:type="b:PropertyTyped" constant="//@machines.4/@concreteConstants/@constants.0">
        <type xsi:type="b:PrimitiveType" type="NAT1"/>
      </exprs>
      <expr xsi:type="b:PropertyRange" constant="//@machines.4/@concreteConstants/@constants.1">
        <range/>
      </expr>
    </properties>
    <operations>
      <operations name="print">
        <args name="sensor"/>
        <args name="variable"/>
        <args name="value"/>
        <body xsi:type="b:Pre">
          <exprs>
            <type xsi:type="b:PrimitiveType" type="STRING"/>
          </exprs>
          <exprs>
            <type xsi:type="b:PrimitiveType" type="STRING"/>
          </exprs>
          <exprs>
            <type xsi:type="b:PrimitiveType" type="STRING"/>
          </exprs>
          <expr xsi:type="b:Skip"/>
        </body>
      </operations>
      <operations name="urgent_print">
        <args name="sensor"/>
        <args name="variable"/>
        <args name="value"/>
        <body xsi:type="b:Pre">
          <exprs>
            <type xsi:type="b:PrimitiveType" type="STRING"/>
          </exprs>
          <exprs>
            <type xsi:type="b:PrimitiveType" type="STRING"/>
          </exprs>
          <exprs>
            <type xsi:type="b:PrimitiveType" type="STRING"/>
          </exprs>
          <expr xsi:type="b:Skip"/>
        </body>
      </operations>
      <operations name="flush">
        <body xsi:type="b:Skip"/>
      </operations>
    </operations>
    <concreteVariables>
      <variables name="current_date"/>
      <variables name="current_time"/>
      <variables name="toprint"/>
    </concreteVariables>
    <invariant>
      <exprs>
        <type xsi:type="b:PrimitiveType" type="INT"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType" type="INT"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
    </invariant>
    <initialisation>
      <exprs>
        <type xsi:type="b:PrimitiveType" type="INT"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType" type="INT"/>
      </exprs>
      <exprs>
        <type xsi:type="b:PrimitiveType"/>
      </exprs>
    </initialisation>
    <assertions>
      <exprs>
        <type xsi:type="b:PrimitiveType" type="INT"/>
      </exprs>
    </assertions>
  </machines>
</b:Program>
