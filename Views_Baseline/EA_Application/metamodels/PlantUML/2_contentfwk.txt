@startuml
class EnterpriseArchitecture  {
}
abstract class Architecture  {
}
class BusinessArchitecture  {
}
class DataArchitecture  {
}
class TechnologyArchitecture  {
}
class Driver  {
}
class Goal  {
}
class Objective  {
}
class OrganizationUnit  {
	headcount: EString
}
class Actor  {
	FTEs: EString
	actorGoal: EString
	actorTasks: EString
}
class Role  {
	estimatedFTEs: EString
}
class DataEntity  {
	dataEntityCategory: DataEntityCategory
	privacyClassification: EString
	retentionClassification: EString
}
class LogicalApplicationComponent  {
}
class Function  {
}
class BusinessService  {
}
class Process  {
	processCritiality: EString
	isAutomated: EBoolean
	processVolumetrics: EString
}
class PlatformService  {
	categoryTRM: EString
}
class PhysicalTechnologyComponent  {
	productName: EString
	moduleName: EString
	vendor: EString
	version: EString
	categoryTRM: EString
}
class Product  {
}
class Measure  {
}
class ServiceQuality  {
}
class Contract  {
	behaviorCharacteristics: EString
	ServiceNameCaller: EString
	ServiceNameCalled: EString
	serviceQualityCharacteristics: EString
	availabilityQualityCharacteristics: EString
	servicesTimes: EString
	manageabilityCharacteristics: EString
	serviceabilityCharacteristics: EString
	performanceCharacteristics: EString
	responseCharacteristics: EString
	reliabilityCharacteristics: EString
	qualityOfInformationRequired: EString
	contractControlRequirements: EString
	resultControlRequirements: EString
	recoverabilityCharacteristics: EString
	locatabilityCharacteristics: EString
	securityCharacteristics: EString
	privacyCharacteristics: EString
	integrityCharacteristics: EString
	credibilityCharacteristics: EString
	localizationCharacteristics: EString
	internationalizationCharacteristics: EString
	interoperabilityCharacteristics: EString
	scalabilityCharacteristics: EString
	portabilityCharacteristics: EString
	extensibilityCharacteristics: EString
	capacityCharacteristics: EString
	throughput: EString
	throughputPeriod: EString
	growth: EString
	growthPeriod: EString
	peakProfileShortTerm: EString
	peakProfileLongTerm: EString
}
class Event  {
}
class Control  {
}
class Element  {
	name: EString
	description: EString
	sourceDescr: EString
	ownerDescr: EString
	ID: EString
}
class Container  {
	name: EString
	id: EString
	description: EString
}
class Label  {
	name: EString
	id: EString
	description: EString
}
class Location  {
}
class Capability  {
	businessValue: EString
	increments: EString
}
abstract class StrategicElement  {
}
class Principle  {
	principleCategory: PrincipleCategory
	priority: EString
	statementOfPrinciple: EString
	rationale: EString
	implication: EString
	metric: EString
}
class Constraint  {
}
class Assumption  {
}
class Requirement  {
	statementOfRequirement: EString
	rationale: EString
	acceptanceCriteria: EString
}
class Gap  {
}
class WorkPackage  {
	workPackageCategory: WorkPackageCategory
}
class LogicalDataComponent  {
}
class PhysicalDataComponent  {
}
class ApplicationArchitecture  {
}
class PhysicalApplicationComponent  {
	lifeCycleStatus: LifeCycleStatus
	initialLiveDate: EDate
	dateOfLastRelease: EDate
	dateOfNextRelease: EDate
	retirementDate: EDate
	availabilityQualityCharacteristics: EString
	servicesTimes: EString
	manageabilityCharacteristics: EString
	serviceabilityCharacteristics: EString
	performanceCharacteristics: EString
	reliabilityCharacteristics: EString
	recoverabilityCharacteristics: EString
	locatabilityCharacteristics: EString
	securityCharacteristics: EString
	privacyCharacteristics: EString
	integrityCharacteristics: EString
	credibilityCharacteristics: EString
	localizationCharacteristics: EString
	internationalizationCharacteristics: EString
	interoperabilityCharacteristics: EString
	scalabilityCharacteristics: EString
	portabilityCharacteristics: EString
	extensibilityCharacteristics: EString
	capacityCharacteristics: EString
	throughput: EString
	throughputPeriod: EString
	growth: EString
	growthPeriod: EString
	peakProfileShortTerm: EString
	peakProfileLongTerm: EString
}
class LogicalTechnologyComponent  {
	categoryTRM: EString
}
class StrategicArchitecture  {
}
enum PrincipleCategory  {
	GuidingPrinciple: GuidingPrinciple
	BusinessPrinciple: BusinessPrinciple
	DataPrinciple: DataPrinciple
	ApplicationPrinciple: ApplicationPrinciple
	IntegrationPrinciple: IntegrationPrinciple
	TechnologyPrinciple: TechnologyPrinciple
}
enum StandardsClass  {
	NonStandard: NonStandard
	Proposed: Proposed
	Provisional: Provisional
	Standard: Standard
	PhasingOut: PhasingOut
	Retired: Retired
}
abstract class Standard  {
	standardClass: StandardsClass
	standardCreationDate: EDate
	lastStandardCreationDate: EDate
	nextStandardCreationDate: EDate
	retireDate: EDate
}
abstract class Service  {
}
abstract class ApplicationComponent  {
}
class InformationSystemService  {
}
enum LifeCycleStatus  {
	Proposed: Proposed
	InDevelopment: InDevelopment
	Live: Live
	PhasingOut: PhasingOut
	Retired: Retired
}
enum DataEntityCategory  {
	Message: Message
	InternallyStoredEntity: InternallyStoredEntity
}
abstract class DataComponent  {
}
abstract class TechnologyComponent  {
}
enum WorkPackageCategory  {
	WorkPackage: WorkPackage
	WorkStream: WorkStream
	Project: Project
	Program: Program
	Portofolio: Portofolio
}
Architecture <|-- BusinessArchitecture
Architecture <|-- DataArchitecture
Architecture <|-- TechnologyArchitecture
Element <|-- Driver
Element <|-- Goal
Element <|-- Objective
Element <|-- OrganizationUnit
Element <|-- Actor
Element <|-- Role
Element <|-- DataEntity
Element <|-- LogicalApplicationComponent
ApplicationComponent <|-- LogicalApplicationComponent
Element <|-- Function
Standard <|-- Function
Element <|-- BusinessService
Service <|-- BusinessService
Element <|-- Process
Standard <|-- Process
Element <|-- PlatformService
Service <|-- PlatformService
Element <|-- PhysicalTechnologyComponent
TechnologyComponent <|-- PhysicalTechnologyComponent
Element <|-- Product
Element <|-- Measure
Element <|-- ServiceQuality
Element <|-- Contract
Element <|-- Event
Element <|-- Control
Element <|-- Location
Element <|-- Capability
Element <|-- StrategicElement
StrategicElement <|-- Principle
StrategicElement <|-- Constraint
StrategicElement <|-- Assumption
StrategicElement <|-- Requirement
StrategicElement <|-- Gap
StrategicElement <|-- WorkPackage
Element <|-- LogicalDataComponent
DataComponent <|-- LogicalDataComponent
Element <|-- PhysicalDataComponent
DataComponent <|-- PhysicalDataComponent
Architecture <|-- ApplicationArchitecture
Element <|-- PhysicalApplicationComponent
ApplicationComponent <|-- PhysicalApplicationComponent
Element <|-- LogicalTechnologyComponent
TechnologyComponent <|-- LogicalTechnologyComponent
Architecture <|-- StrategicArchitecture
Standard <|-- Service
Standard <|-- ApplicationComponent
Service <|-- InformationSystemService
Element <|-- InformationSystemService
Standard <|-- DataComponent
Standard <|-- TechnologyComponent
EnterpriseArchitecture *--> "architectures *" Architecture
EnterpriseArchitecture *--> "containers *" Container
EnterpriseArchitecture *--> "labels *" Label
BusinessArchitecture *--> "drivers *" Driver
BusinessArchitecture *--> "goals *" Goal
BusinessArchitecture *--> "objectives *" Objective
BusinessArchitecture *--> "units *" OrganizationUnit
BusinessArchitecture *--> "actors *" Actor
BusinessArchitecture *--> "roles *" Role
BusinessArchitecture *--> "functions *" Function
BusinessArchitecture *--> "services *" BusinessService
BusinessArchitecture *--> "processes *" Process
BusinessArchitecture *--> "controls *" Control
BusinessArchitecture *--> "events *" Event
BusinessArchitecture *--> "locations *" Location
BusinessArchitecture *--> "products *" Product
BusinessArchitecture *--> "contracts *" Contract
BusinessArchitecture *--> "measures *" Measure
BusinessArchitecture *--> "servicesQuality *" ServiceQuality
DataArchitecture *--> "entities *" DataEntity
DataArchitecture *--> "logicalComponents *" LogicalDataComponent
DataArchitecture *--> "physicalComponents *" PhysicalDataComponent
TechnologyArchitecture *--> "platformServices *" PlatformService
TechnologyArchitecture *--> "physicalComponents *" PhysicalTechnologyComponent
TechnologyArchitecture *--> "logicalComponents *" LogicalTechnologyComponent
Driver "addressesDrivers *" -- "createsGoals *" Goal
Driver "isMotivatedByDrivers *" -- "motivatesOrganizationUnits *" OrganizationUnit
Driver --> "decomposesDriver" Driver
Goal "realizesGoals *" -- "isRealizedThroughObjectives *" Objective
Goal --> "decomposesGoal" Goal
Objective "setsPerformanceCriteriaForObjectives *" -- "isTrackedAgainstMeasures *" Measure
Objective --> "decomposesObjective" Objective
OrganizationUnit "isOwnedAndGovernedByOrganizationUnits *" -- "ownsAndGovernsServices *" Service
OrganizationUnit "belongsTo" -- "containsActors *" Actor
OrganizationUnit "isOwnedByUnit" -- "ownsFunctions *" Function
OrganizationUnit "involvesOrganizationUnits *" -- "participatesInProcesses *" Process
OrganizationUnit "isProducedByOrganizationUnits *" -- "producesProducts *" Product
OrganizationUnit "containsOrganizationUnits *" -- "operatesInLocation" Location
Actor "isSuppliedByActors *" -- "suppliesEntities *" DataEntity
Actor "isConsumedByActors *" -- "consumesEntities *" DataEntity
Actor "supportsActors *" -- "interactsWithFunctions *" Function
Actor "isAssumedByActors *" -- "performsTaskInRoles *" Role
Actor "involvesActors *" -- "participatesInProcesses *" Process
Actor --> "consumesServices *" Service
Actor "isResolvedByActors *" -- "resolvesEvents *" Event
Actor "isGeneratedByActors" -- "generatesEvents *" Event
Actor "containsActors *" -- "operatesInLocation" Location
Actor "isPerformedByActors *" -- "performsFunctions *" Function
Actor --> "decomposesActors *" Actor
Role "canBeAccessedByRoles *" -- "accessesFunctions *" Function
Role --> "decomposesRole" Role
DataEntity "consumesEntities *" -- "isAccessedByServices *" Service
DataEntity "providesEntities *" -- "isUpdatedThroughServices *" Service
DataEntity "encapsulatesDataEntities *" -- "residesWithinLogicalDataComponent" LogicalDataComponent
DataEntity "operatesOnDataEntities *" -- "isProcessesByLogicalApplicationComponents *" LogicalApplicationComponent
DataEntity --> "decomposeEntity" DataEntity
DataEntity --> "relatesTo *" DataEntity
LogicalApplicationComponent "isRealizedThroughLogicalApplicationComponent *" -- "implementsServices *" Service
LogicalApplicationComponent "extendsLogicalApplicationComponents *" -- "isExtendedByPhysicalApplicationComponents *" PhysicalApplicationComponent
LogicalApplicationComponent --> "communicatesWith *" LogicalApplicationComponent
LogicalApplicationComponent --> "decomposesLogicalApplicationComponent" LogicalApplicationComponent
Function "providesGovernedInterfaceToAccessFunctions *" -- "isBoundedByServices *" Service
Function "decomposesFunctions *" -- "supportsProcesses *" Process
Function "orchestratesFunctions *" -- "isRealizedByProcesses *" Process
Function --> "decomposesFunction" Function
Function --> "communicatedWithFunctions *" Function
BusinessService --> "supportsObjective *" Objective
Process "isRealizedByProcesses *" -- "orchestratesServices *" Service
Process "supportsProcesses *" -- "decomposesServices *" Service
Process "ensuresCorrectOperationOfProcesses *" -- "isGuidedByControls *" Control
Process "isResolvedByProcesses *" -- "resolvesEvents *" Event
Process "isGeneratedByProcesses *" -- "generatesEvents *" Event
Process "isProducedByProcesses *" -- "producesProducts *" Product
Process --> "decomposesProcess" Process
PlatformService "suppliesPlatformServices *" -- "isSuppliedByLogicalTechnologyComponents *" LogicalTechnologyComponent
PhysicalTechnologyComponent --> "realizesApplicationComponents *" PhysicalApplicationComponent
PhysicalTechnologyComponent "isRealizedByPhysicalTechnologyComponents *" -- "extendsLogicalTechnologyComponents *" LogicalTechnologyComponent
PhysicalTechnologyComponent "containsPhysicalTechnologyComponents *" -- "isHostedInLocation *" Location
PhysicalTechnologyComponent --> "decomposesPhysicalTechnologyComponent" PhysicalTechnologyComponent
PhysicalTechnologyComponent --> "isDependentOnPhysicalTechnologyComponents *" PhysicalTechnologyComponent
Measure "isTrackedAgainstMeasures *" -- "setsPerformanceCriteriaForServices *" Service
Measure --> "decomposesMeasure" Measure
ServiceQuality "meetsQualities *" -- "appliesToServices *" Service
ServiceQuality "meetsServiceQuality *" -- "appliesToContracts *" Contract
Contract "isGovernedAndMeasuredByContracts *" -- "governsAndMeasuresBusinessServices *" Service
Event "resolvesEvents *" -- "isResolvedByBusinessServices *" Service
Element "ownedElements *" -- "category *" Label
Container *--> "subContainers *" Container
Container "containers *" -- "labels *" Label
Label *--> "subLabels *" Label
Location "isHotedInLocation" -- "containsPhysicalDataComponents *" PhysicalDataComponent
Location "isHostedInLocation *" -- "containsPhysicalApplicationComponents *" PhysicalApplicationComponent
Location --> "decomposesLocation" Location
Capability "deliversCapabilities *" -- "isDeliveredBy" WorkPackage
LogicalDataComponent "extendsLogicalDataComponents *" -- "isExtendedByPhysicalDataComponents *" PhysicalDataComponent
PhysicalDataComponent --> "decomposesPhysicalDataComponent" PhysicalDataComponent
PhysicalDataComponent --> "encapsulatesPhysicalApplicationComponents *" PhysicalApplicationComponent
ApplicationArchitecture *--> "logicalApplicationComponents *" LogicalApplicationComponent
ApplicationArchitecture *--> "physicalApplicationComponents *" PhysicalApplicationComponent
ApplicationArchitecture *--> "informationSystemServices *" InformationSystemService
PhysicalApplicationComponent --> "communicatesWith *" PhysicalApplicationComponent
PhysicalApplicationComponent --> "encapsulatesPhysicalDataComponents *" PhysicalDataComponent
PhysicalApplicationComponent --> "isRealizedByPhysicalTechnologyComponents *" PhysicalTechnologyComponent
PhysicalApplicationComponent --> "decomposesPhysicalApplicationComponent" PhysicalApplicationComponent
LogicalTechnologyComponent "isImplementedOnLogicalTechnologyComponents *" -- "providesPlatformForServices *" Service
LogicalTechnologyComponent --> "decomposesLogicalTechnologyComponent" LogicalTechnologyComponent
LogicalTechnologyComponent --> "isDependentOnLogicalTechnologyComponents *" LogicalTechnologyComponent
StrategicArchitecture *--> "capabilities *" Capability
StrategicArchitecture *--> "strategicElements *" StrategicElement
Service --> "isProvidedToActors *" Actor
Service --> "consumesServices *" Service
Service --> "decomposesServices *" Service
@enduml